Patient signup page

//Main



import 'package:flutter/material.dart';
import 'package:flutter_app/Doctor.dart';
import 'package:flutter_app/Patient.dart';


void main() => runApp(MyApp());
class MyApp extends StatelessWidget{
    @override
    Widget build(BuildContext context){
      return MaterialApp(title: 'My HealthBook',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
        home:Patient(),

      );
    }
  }


//Pateint signup page source code

import 'dart:html';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/painting.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:hexcolor/hexcolor.dart';
import 'package:country_picker/country_picker.dart';
import 'package:form_field_validator/form_field_validator.dart';


class Patient extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return PatientState();
  }
}
class PatientState extends State<Patient> {

  String _firstName;
  String _lastName;
  String _address;
  String _unit;
  String _postalCode;
  String _province;
  String _country;
  String _phoneNumber;
  String _healthCardNumber;
  String _familyDoctor;
  String _gender;
  String _title;

  bool value=false;



  String valueChoose;

  List ProvinceItem= ["Alberta",
    "British Columbia",
    "Manitoba",
    "New Brunswick",
    "Newfoundland and Labrador",
    "Nova Scotia",
    "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan"];

  String valueGen;

  List GenderItem= ["Male", "Female", "Transgender", "Other", "Prefer not to say"];


  String valueCoun;
  List CountriesItem = ["Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan",
    "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria",
    " Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Central African Republic (CAR)", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo",
    "Democratic Republic of the Congo", "Republic of the Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czechia", "Denmark", "Djibouti", "Dominica", "Dominican Republic",
    "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana",
    "Greece", "Grenada", "Guatemala", "Guinea", " Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy",
    "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein",
    "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova",
    "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", " Nicaragua", "Niger", "Nigeria", "North Korea",
    "North Macedonia", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", " Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania",
    "Russia", "Rwanda", "  Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", " San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia",
    "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", " South Africa", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname",
    "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", " Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu",
    "Uganda", "Ukraine", "United Arab Emirates (UAE)", " United Kingdom (UK)", "United States of America (USA)", " Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam",
    "Yemen", "Zambia", "Zimbabwe"];

  String colorGroupValue= '';


  String valueDate;
  List DatesItem = ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"];

  String valueMonth;
  List MonthItem = ["Jnauary", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

  String valueYear;
  List YearItem = [
     "1900","1901", "1902","1903","1904","1905","1906", "1907","1908","1909","1910","1911",'1912',"1913","1914",'1915',"1916","1917","1918","1919","1920","1921","1922","1923",
    "1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944", "1945","1946","1947","1948",
    "1949","1950","1951","1952","1953",'1954',"1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968", "1969","1970","1971","1972","1973",
    "1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997",
    "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006","2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019",
    "2020", "2021"];

  final GlobalKey<FormState> _formkey = GlobalKey<FormState>();

  Widget buildTitle(){
    return Text("Patient sign up", style: GoogleFonts.lato(fontSize:25, fontWeight:FontWeight.bold ),

      textAlign: TextAlign.left,

    ); //Text

  }

  Widget buildFirstName() =>Column(


    crossAxisAlignment: CrossAxisAlignment.center,

    key: _formkey,
    children: [Text('First Name', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold)
    ),

    const SizedBox(height:44, width: 224), Align(alignment: Alignment.centerLeft), TextField(

    decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,

        ),

            ),

  )],


  );


  Widget buildLastName()=>Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [Text('Last Name', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
      ),
        const SizedBox(height:44, width: 224), Align(alignment: Alignment.centerRight), TextField(
          decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
            color: Colors.red,
          ),),
        )],
  );

  Widget buildAddress()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Address', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      const SizedBox(height:44, width: 321), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),),
      )],
  );
  Widget buildUnitApt()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Unit / Apartment #', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      const SizedBox(height:44, width: 113), Align(alignment: Alignment.centerRight), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF")),
      )],
  );

  Widget buildPostalCode()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Postal Code / Zip Code', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      const SizedBox(height:44, width: 321), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),),
      )
      ],
  );


  Widget buildProvince()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Province / State', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueChoose,
      icon: Icon(Icons.arrow_drop_down),
      iconSize: 20,
      onChanged: (newValue){
        setState(() {
          valueChoose = newValue;
        });
        },
          items:ProvinceItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
          }).toList(),
      ),
      ],
  );


  Widget buildCountry()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Country', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueCoun,
        hint: Text("Select"),
        icon: Icon(Icons.arrow_drop_down),
        iconSize: 20,
        onChanged: (newValue){
          setState(() {
            valueCoun = newValue;
          });
        },
        items:CountriesItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
        }).toList(),
      ),

    ],
  );

  Widget buildPhoneNumber()=>Column(
  crossAxisAlignment: CrossAxisAlignment.center,
  children: [Text('Phone Number', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
  ),
  const SizedBox(height:44, width: 224), Align(alignment: Alignment.centerLeft), TextField(
  decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
  color: Colors.red,
  ),),
  )],
  );

  Widget buildHealthCardNumber()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Health Card Number', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      const SizedBox(height:44, width: 224), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),),
      )],
  );

  Widget buildFamilyDoctor()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Family Doctor', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      const SizedBox(height:44, width: 224), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),),
      )],
  );

  Widget buildGender()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Gender', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueGen,
        icon: Icon(Icons.arrow_drop_down),
        iconSize: 20,
        onChanged: (newValue){
          setState(() {
            valueGen = newValue;
          });
        },
        items:GenderItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
        }).toList(),
      ),
      ],
  );

  Widget buildWeight()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [
                Text('Weight', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ), ListTile(leading: Radio(value: 'kg', groupValue: colorGroupValue, onChanged: (value){colorGroupValue = value; setState(() {

    });}), title: Text('kg'), ),
      ListTile(leading: Radio(value: 'lbs', groupValue: colorGroupValue, onChanged: (value){colorGroupValue = value; setState(() {

      });}), title: Text('lbs')),
      const SizedBox(height:44, width: 222), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),
        ),
      )],
  );

  Widget buildHeight()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [
      Text('Height', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
      ), ListTile(leading: Radio(value: 'cm', groupValue: colorGroupValue, onChanged: (value){colorGroupValue = value; setState(() {

      });}), title: Text('cm'), ),
      ListTile(leading: Radio(value: 'in', groupValue: colorGroupValue, onChanged: (value){colorGroupValue = value; setState(() {

      });}), title: Text('in')),
      const SizedBox(height:44, width: 222), Align(alignment: Alignment.centerLeft), TextField(
        decoration: InputDecoration(border: InputBorder.none, filled: true, fillColor: HexColor("#F4F8FF"), suffixStyle: TextStyle(
          color: Colors.red,
        ),
        ),
      )],
  );

  Widget buildBirthDay()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Day', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueDate,
        icon: Icon(Icons.arrow_drop_down),
        iconSize: 20,
        onChanged: (newValue){
          setState(() {
            valueDate = newValue;
          });
        },
        items:DatesItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
        }).toList(),
      ),
    ],
  );

  Widget buildBirthMonth()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Month', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueMonth,
        icon: Icon(Icons.arrow_drop_down),
        iconSize: 20,
        onChanged: (newValue){
          setState(() {
            valueMonth = newValue;
          });
        },
        items:MonthItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
        }).toList(),
      ),
    ],
  );

  Widget buildBirthYear()=>Column(
    crossAxisAlignment: CrossAxisAlignment.center,
    children: [Text('Year', style: GoogleFonts.lato(fontSize:18, fontWeight:FontWeight.bold )
    ),
      DropdownButton(value: valueYear,
        icon: Icon(Icons.arrow_drop_down),
        iconSize: 20,
        onChanged: (newValue){
          setState(() {
            valueYear = newValue;
          });
        },
        items:YearItem.map((valueItem){
          return DropdownMenuItem(
              value: valueItem,
              child: Text(valueItem)
          );
        }).toList(),
      ),
    ],
  );





  @override
  Widget build(BuildContext context) {
    
    return Scaffold(appBar:
    AppBar(leading: Padding(
    padding: const EdgeInsets.all(2.0),
    child: Image.asset(
    "C:/Users/yosie/Desktop/logo.png",
    ),
    ),
    ),
    body:  SingleChildScrollView(
      child: Container(
        margin: EdgeInsets.all(40),
        child:  Form(

          key:_formkey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              buildTitle(),
              buildFirstName(),
              buildLastName(),
              buildAddress(),
              buildUnitApt(),
              buildPostalCode(),
              buildProvince(),
              buildCountry(),
              buildPhoneNumber(),
              buildHealthCardNumber(),
              buildFamilyDoctor(),
              buildGender(),
              buildWeight(),
              buildHeight(),
              buildBirthDay(),
              buildBirthMonth(),
              buildBirthYear(),
              CheckboxListTile(title: Text("I agree to the MyHealthBook and Terms & Conditions Privacy Policy"),value: value, onChanged: (bool newValue){
                setState(() {
                  value = newValue;
                  
                });
              }),



              SizedBox(height: 2),
              RaisedButton(
                child: Text('Sign Up', style: TextStyle(color: Colors.blue),),
                onPressed: () {
                  if(!_formkey.currentState.validate()){
                      return;
                  }
                  _formkey.currentState.save();
                  print(_title);
                  print(_firstName);
                  print(_lastName);
                  print(_address);
                  print(_unit);
                  print(_postalCode);
                  //print(_province);
                  print(_country);
                  print(_phoneNumber);
                  print(_healthCardNumber);
                  print(_familyDoctor);
                  print(_gender);



                },
              )

            ],
          ),
        ),
      ),
    )

    );
  }}








